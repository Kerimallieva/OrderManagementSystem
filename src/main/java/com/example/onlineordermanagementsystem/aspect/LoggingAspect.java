package com.example.onlineordermanagementsystem.aspect;

import org.aspectj.lang.ProceedingJoinPoint;
import org.aspectj.lang.annotation.*;
import org.springframework.stereotype.Component;

@Component
@Aspect
public class LoggingAspect {


    @Around("com.example.onlineordermanagementsystem.aspect.Pointcuts.aroundPointCut()")
    public Object logOrderPlacement(ProceedingJoinPoint joinPoint) throws  Throwable{

        System.out.println("‚è≥ –ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–∞...");

        Object result = joinPoint.proceed();

        System.out.println("‚úÖ –ó–∞–∫–∞–∑ –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ!");
        return result;
    }

    @AfterReturning(pointcut = "com.example.onlineordermanagementsystem.aspect.Pointcuts.afterReturningPointcut()",
    returning = "order")
    public void logOrderRetrieval(Object order){
        System.out.println("üì¶ –ó–∞–∫–∞–∑ –ø–æ–ª—É—á–µ–Ω: " + order);
    }

    @AfterThrowing(pointcut = "com.example.onlineordermanagementsystem.aspect.Pointcuts.afterReturningPointcut()", throwing = "e")
    public void logOrderNotFound(Exception e){
        System.out.println("‚ùå –û—à–∏–±–∫–∞: " + e.getMessage());
    }
}
